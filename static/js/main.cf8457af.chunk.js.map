{"version":3,"sources":["components/App/App.module.css","components/ContactList/ContactList.module.css","components/SearchFilter/SearchFilter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/AddContact/AddContact.js","components/ContactList/ContactList.js","components/SearchFilter/SearchFilter.js","components/App/App.js","index.js","components/AddContact/AddContact.module.css"],"names":["module","exports","addContact","createAction","data","payload","id","shortid","generate","name","number","deleteContact","changeFilter","items","createReducer","actions","state","filter","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","contactsReducer","persistor","persistStore","AddContact","nameInputId","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","oldContact","props","find","contact","onSubmit","alert","reset","className","s","form","this","form_label","htmlFor","form__input","type","onChange","form__button","Component","connect","dispatch","contactsActions","filterContacts","allContacts","normalizedFilter","toLocaleLowerCase","toLowerCase","includes","map","form__list","form__list_button","onClick","target","form__label","App","container","container__title","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cf8457af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3wNh8\",\"container__title\":\"App_container__title__3eVf-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__list\":\"ContactList_form__list__3GcO4\",\"form__list_button\":\"ContactList_form__list_button__7PI7m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__label\":\"SearchFilter_form__label__3L-p1\",\"form__input\":\"SearchFilter_form__input__2rEZP\"};","import {createAction} from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', data => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        name: data.name,\r\n        number: data.number,\r\n      }\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\n// eslint-disable-next-line \r\nexport default {addContact, deleteContact, changeFilter};\r\n\r\n\r\n// without Toolkit\r\n\r\n// import types from './contacts-types';\r\n\r\n// const addContact = (data) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: shortid.generate(),\r\n//         name: data.name,\r\n//         number: data.number,\r\n//       }\r\n// });\r\n\r\n// const deleteContact = (id) => ({\r\n//     type: types.DELETE,\r\n//     payload: id,\r\n// })\r\n// const changeFilter = value => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// })","import { combineReducers } from \"redux\";\r\nimport {createReducer} from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\n\r\nconst items = createReducer([], {\r\n   [actions.addContact]: (state, {payload}) => [...state, payload],\r\n   [actions.deleteContact]: (state, {payload}) => state.filter(({id}) => id !== payload),\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})\r\n\r\n\r\n// without Toolkit\r\n\r\n// const items = (state = [], {type, payload}) => { \r\n//     switch(type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n//         case types.DELETE:\r\n//             return state.filter(({id}) => id !== payload);\r\n//             default:  return state;\r\n//     }\r\n// }\r\n// const filter = (state = '', {type, payload}) => { \r\n//     switch(type) {\r\n//         case [actions.changeFilter]:\r\n//             return payload;\r\n\r\n//             default:  return state;\r\n//     }\r\n// }","import { configureStore, getDefaultMiddleware, } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer,   FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER, } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'conacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n}\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n}), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer ),\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store)\r\n\r\n// eslint-disable-next-line\r\nexport default {store, persistor};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport s from '../AddContact/AddContact.module.css';\r\nimport shortid from 'shortid';\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const { name } = this.state;\r\n\r\n    const oldContact = this.props.state.contacts.items.find(\r\n      contact => contact.name === name,\r\n    );\r\n\r\n    if ( name !== '') {\r\n      this.props.onSubmit(this.state);\r\n    } else {\r\n      alert ('Type contact name')\r\n      return\r\n    }\r\n    if (oldContact) {\r\n      alert(`This name is in contacts.`);\r\n      this.reset();\r\n      return;}\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.handleSubmit}>\r\n        <label className={s.form_label} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={s.form__input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label className={s.form_label} htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            className={s.form__input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={s.form__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n state,\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(contactsActions.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddContact);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport s from '../ContactList/ContactList.module.css';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactList = function ({ contacts, deleteContact }) {\r\n  return (\r\n    <ul>\r\n         {contacts.map(e => {\r\n          return (\r\n            <li key={e.id} className={s.form__list}>\r\n              <span>{e.name}: </span>\r\n              <span>{e.number}</span>\r\n              <button\r\n                type=\"button\"\r\n                className={s.form__list_button}\r\n                onClick={() => deleteContact(e.id)}\r\n              >\r\n                Delete contact\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst filterContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLocaleLowerCase();\r\n  return allContacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: filterContacts(items, filter)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: (id) => dispatch(contactsActions.deleteContact(id)), \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\nimport s from '../SearchFilter/SearchFilter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchFilter = ({ value, onChange }) => (\r\n  <label className={s.form__label}>\r\n    Find contacts by name\r\n    <input type=\"text\" name=\"name\" value={value} onChange={onChange} className={s.form__input} />\r\n  </label>\r\n);\r\n\r\nSearchFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps =  state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)), \r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps) (SearchFilter);\r\n\r\n\r\n","import React from 'react';\r\nimport s from '../App/App.module.css';\r\nimport AddContact from '../AddContact/AddContact';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport SearchFilter from '../SearchFilter/SearchFilter';\r\n\r\nconst App = () => (\r\n  <div className={s.container}>\r\n  <h1 className={s.container__title}>Phonebook</h1>\r\n  <AddContact />\r\n  <h2 className={s.container__title}>Contacts</h2>\r\n  <SearchFilter  />\r\n  <ContactList />\r\n</div>\r\n);\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './components/App/App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n     <Provider store={store.store}>\r\n        <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n        </PersistGate>\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__hxoPx\",\"form__label\":\"AddContact_form__label__1l5Pv\",\"form__input\":\"AddContact_form__input__tbP7-\",\"form__button\":\"AddContact_form__button__1pi21\"};"],"sourceRoot":""}